"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.1.11.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

# This is the main configuration file for your Django project. 
# It controls the behavior of your entire application.
# This file contains development settings that should be modified before going into production, 
# especially securing the SECRET_KEY and setting DEBUG to False.

from pathlib import Path

## 1. Project paths: Defines the root directory of your project using Python's Path object
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

## 2. Security settings: 

# Unique cryptographic key used for signing and security.
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-@xc1572g+a2uj8!hp+vo30l9l#==qh%xho6=*7ry=*1^i0&%7("

# Enables detailed error pages (should be False in production)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# List of valid hostnames for this site
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '.pythonanywhere.com']

## 3. Application definition: 

# List of Django apps activated for this project.
# As standard it includes only Django's built-in apps (admin, auth, etc.)
# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "blog"
]

## 4. Middleware: 
# Components that process requests/responses globally
# Handles security, sessions, CSRF protection, authentication, etc.
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

## 5. URL configuration: 
ROOT_URLCONF = "mysite.urls" # Points to the main URL routing file

## 6. Templates: Configures Django's template rendering system
# Uses Django's built-in template engine
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

## 7. WSGI application: Entry point for WSGI servers to serve your Django application
# WSGI = Web Server Gateway Interface is a specification that defines how web servers 
# and Python web applications communicate. It acts as a bridge, allowing web servers 
# like Apache or Nginx to interact with Python frameworks like Django or Flask. 
WSGI_APPLICATION = "mysite.wsgi.application"

## 8. Database: 
# Currently configured to use SQLite (default DB for development)
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3", # Database file stored at BASE_DIR/db.sqlite3
    }
}

## 9. Authentication: 
# Password validation rules
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

## 10. Internationalization: 
# Language, time zone, and internationalization settings
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = "en-GB" # http://www.i18nguy.com/unicode/language-identifiers.html

TIME_ZONE = "Europe/London" # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

USE_I18N = True

USE_TZ = True


## 11. Static files (CSS, JavaScript, Images):
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / 'static'

## 12. Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
# Uses BigAutoField as the default primary key type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
